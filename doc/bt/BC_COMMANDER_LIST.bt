//--------------------------------------
//--- 010 Editor v8.0 Binary Template
//
//      File: BC_COMMANDER_LIST.bt
//   Authors: exec, celophi, Salman T. Khan
//   Version: i336041
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//   - i11025:  BARRACK_PC.i1 was added
//   - i11257:  AccountProperties.s1 was added
//   - i170175: BARRACK_PC.b1~b3 were added
//   - i218535: BARRACK_PC.b4 was added
//   - i218535: AccountProperties.i1 was added
//   - i336041: ???
//------------------------------------------------

//#define PROPERTY_NAMES
#include "common.bt"

typedef struct
{
    short size;
    short serverId;
    int barrackLayer;
    byte b1;
    byte b2;

    if(size > 0)
        getProperties(size);
}
AccountProperties;

typedef struct
{
    ItemProperties itemProperties[EquipSlotCount] <optimize=false>;
}
EquipProperties;

typedef struct
{
    APPEARANCE_BARRACK_PC abpc;
    EquipProperties equipProperties;
    
    byte b1;
    byte b2;
    byte b3;
    byte b4;
    
    // maybe job history?
    short jobIdCount;
    short jobIds[jobIdCount];
    
    int i1;
}
BARRACK_PC <read=readBARRACK_PC>;

string readBARRACK_PC(BARRACK_PC &v)
{
    return v.abpc.appearancePc.name;
}

ServerHeaderDynamic header;

int64 accountId;
byte b1;
byte characterCount;
char teamName[64];

AccountProperties properties;
short disableAdditionalCharacterSlots;
if (disableAdditionalCharacterSlots == 0) {
    ushort additionalCharacterCount;
    int teamExp;
    if (properties.size != 0)
        int totalCharacterCount;
    else
        short characterCount2;
} else {
    int mapId;
    short s1;
    short additionalCharacterSlots;
    int teamExp; // ?
    short characterCount2;
}