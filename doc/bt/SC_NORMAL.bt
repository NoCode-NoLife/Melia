//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: SC_NORMAL.bt
//   Authors: Salman T. Khan
//   Version: i340313
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

#include "inc/common.bt"

ServerHeaderDynamic header;

int type;
switch (type)
{
    // LoginSuccess
    case 0x00:
        break;

    // Login Related?
    case 0x02:
        break;

    case 0x01:
        int i1; // 3
        break;

    // AddMessage
    case 0x03:
        int64 chatId; // 554836760199289
        int64 l2; // 1 = Chat Room, 2 = Player
        byte b1; // 1
        FILETIME timeStamp;
        lpString senderTeamName; // Shayaan
        short serverGroup; // 1001
        lpString message; // hey
        byte b2; // 0 = Player, 1 = Chat Room
        int i1; // 2
        short s1; // 1
        byte b3; // 0
        lpString targetTeamName; // Shanzay
        lpString serverType; // GLOBAL
        break;

    // MessageList
    case 0x04:
        typedef struct
        {
            int64 l3; // 2
            FILETIME timeStamp2;
            lpString teamName; // Shayaan
            lpString text; // !@#$NewRoomHasBeenCreated#@!
        }
        ChatMessage <optimize=false>;

        int64 chatId; // 557001423716382
        int messageCount;
        ChatMessage messages[messageCount];
        break;

    // CreateRoom
    case 0x05:
        typedef struct
        {
            int64 accountId;
            lpString teamName;
            byte isOnline;
            byte gap1[3];
        }
        ChatMember <optimize=false>;

        int64 chatId;
        int roomType;
        lpString str1;
        int64 l1;
        lpString roomName;
        int memberCount;
        int i4;
        byte b1;
        ChatMember members[memberCount];
        break;

    // Group Chat Creation?
    case 0x07:
        int i1; // 22507
        short s1; // 1
        byte b0; // 0
        break;

    // FriendInfo
    case 0x08:
        typedef struct
        {
            int64 l1;
            int64 accountId;
            char teamName1[64];
            char str1[56];
            int64 l2;
            int level;
            char teamName2[64];
            char name[64];
            short s3;
            short jobId;
            int i4;
            int i2;
            short gender;
            int hair;
            byte bin[26];
            uint i3 <format=hex>;
            byte bin3[16];
            short s4;
            ShortDate lastLogin;
            char str2[32];
            byte b1;
            short mapId;
            short channelId;
            lpString group;
            lpString note;
        }
        Friend <optimize=false>;

        byte friendStatus;
        int64 accountId;
        int count;
        Friend friends[count];
        break;

    // Party Member Update
    case 0x0C:
        byte partyType;
        int64 partyId;
        byte type;

        switch (type)
        {
            // Character Info
            case 0:
                int64 accountId;
                position pos;
                int sp;
                int hp;
                int maxHp;
                int maxSp;
                int i1;
                int i2; // gap?
                int level;
                break;

            // Buff Info
            case 1:
                int64 accountId;
                int buffId;
                int i2; // -1 or 1
                int i3; // -1
                byte isLastPacket;
                break;
        }
        break;

    // ?
    case 0x14:
        int64 accountId; // 76561198023169014
        int i1; // 685
        break;

    case 0x19:
        int64 accountId1; // 76561198023169014
        int64 accountId2; // 76561198023169014
        byte bin[16]; // 0s
        lpString str; // WEEK
        int64 l1; // 1
        break;

    // LikeSuccess
    case 0x7D05:
        int64 accountId;
		lpString teamName;
        break;

    // UnlikeSuccess
    case 0x7D07:
        int64 accountId;
		lpString teamName;
        break;

    // LikedList
    // List of other players that were liked by the player
    case 0x7D09:
        int count;
        lpString teamNames[count];
        break;
		
    // LikedMeList
    // List of other players that liked the player
    case 0x7D0A:
        typedef struct
        {
            lpString teamName;
            FILETIME time;
            byte b1;
        }
        LikeMeInfo <optimize=false>;

        int count;
        LikeMeInfo infos[count];
        break;
		
	// LikeCount
    case 0x7D0B:
        int64 accountId;
		int count;
        break;
}